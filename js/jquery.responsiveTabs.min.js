/**
 * responsive-tabs
 * 
 * jQuery plugin that provides responsive tab functionality. The tabs transform to an accordion when it reaches a CSS breakpoint.
 * 
 * @author Jelle Kralt
 * @version v1.6.3
 * @license MIT
 */
!function(r, o, i) {
    var e = {
        version: "1.6.6",
        active: null,
        event: "click",
        disabled: [],
        collapsible: "accordion",
        startCollapsed: !1,
        rotate: !1,
        setHash: !1,
        animation: "default",
        animationQueue: !1,
        duration: 500,
        fluidHeight: !0,
        scrollToAccordion: !1,
        scrollToAccordionOnLoad: !0,
        scrollToAccordionOffset: 0,
        accordionTabElement: "<div></div>",
        navigationContainer: "",
        getversion: function() {},
        click: function() {},
        activate: function() {},
        deactivate: function() {},
        load: function() {},
        activateState: function() {},
        classes: {
            stateDefault: "r-tabs-state-default",
            stateActive: "r-tabs-state-active",
            stateDisabled: "r-tabs-state-disabled",
            stateExcluded: "r-tabs-state-excluded",
            container: "r-tabs",
            ul: "r-tabs-nav",
            tab: "r-tabs-tab",
            anchor: "r-tabs-anchor",
            panel: "r-tabs-panel",
            accordionTitle: "r-tabs-accordion-title"
        }
    };
    function a(t, s) {
        this.element = t, this.$element = r(t), this.tabs = [], this.state = "", this.rotateInterval = 0, 
        this.$queue = r({}), this.options = r.extend({}, e, s), this.init();
    }
    a.prototype.init = function() {
        var a = this;
        this.tabs = this._loadElements(), this._loadClasses(), this._loadEvents(), r(o).on("resize", function(t) {
            a._setState(t), !0 !== a.options.fluidHeight && a._equaliseHeights();
        }), r(o).on("hashchange", function(t) {
            var s = a._getTabRefBySelector(o.location.hash), e = a._getTab(s);
            0 <= s && !e._ignoreHashChange && !e.disabled && a._openTab(t, a._getTab(s), !0);
        }), !1 !== this.options.rotate && this.startRotation(), !0 !== this.options.fluidHeight && a._equaliseHeights(), 
        this.$element.bind("tabs-click", function(t, s) {
            a.options.click.call(this, t, s);
        }), this.$element.bind("tabs-getversion", function(t, s) {
            a.options.getversion.call(this, t, s);
        }), this.$element.bind("tabs-activate", function(t, s) {
            a.options.activate.call(this, t, s);
        }), this.$element.bind("tabs-deactivate", function(t, s) {
            a.options.deactivate.call(this, t, s);
        }), this.$element.bind("tabs-activate-state", function(t, s) {
            a.options.activateState.call(this, t, s);
        }), this.$element.bind("tabs-load", function(t) {
            var s;
            a._setState(t), !0 === a.options.startCollapsed || "accordion" === a.options.startCollapsed && "accordion" === a.state || (s = a._getStartTab(), 
            a._openTab(t, s), a.options.load.call(this, t, s));
        }), this.$element.trigger("tabs-load");
    }, a.prototype._loadElements = function() {
        var i = this, t = ("" === i.options.navigationContainer ? this.$element : this.$element.find(i.options.navigationContainer)).children("ul:first"), n = [], l = 0;
        return this.$element.addClass(i.options.classes.container), t.addClass(i.options.classes.ul), 
        r("li", t).each(function() {
            var t, s, e, a, o = r(this);
            o.hasClass(i.options.classes.stateExcluded) || (t = (a = r("a", o)).attr("href"), 
            s = r(t), e = r(i.options.accordionTabElement).insertBefore(s), a = r("<a></a>").attr("href", t).html(a.html()).appendTo(e), 
            o = {
                _ignoreHashChange: !1,
                id: l,
                disabled: -1 !== r.inArray(l, i.options.disabled),
                tab: r(this),
                anchor: r("a", o),
                panel: s,
                selector: t,
                accordionTab: e,
                accordionAnchor: a,
                active: !1
            }, l++, n.push(o));
        }), n;
    }, a.prototype._loadClasses = function() {
        for (var t = 0; t < this.tabs.length; t++) this.tabs[t].tab.addClass(this.options.classes.stateDefault).addClass(this.options.classes.tab), 
        this.tabs[t].anchor.addClass(this.options.classes.anchor), this.tabs[t].panel.addClass(this.options.classes.stateDefault).addClass(this.options.classes.panel), 
        this.tabs[t].accordionTab.addClass(this.options.classes.accordionTitle), this.tabs[t].accordionAnchor.addClass(this.options.classes.anchor), 
        this.tabs[t].disabled && (this.tabs[t].tab.removeClass(this.options.classes.stateDefault).addClass(this.options.classes.stateDisabled), 
        this.tabs[t].accordionTab.removeClass(this.options.classes.stateDefault).addClass(this.options.classes.stateDisabled));
    }, a.prototype._loadEvents = function() {
        function t(t) {
            var s = a._getCurrentTab(), e = t.data.tab;
            t.preventDefault(), e.tab.trigger("tabs-click", e), e.disabled || (a.options.setHash && (history.pushState ? (o.location.origin || (o.location.origin = o.location.protocol + "//" + o.location.hostname + (o.location.port ? ":" + o.location.port : "")), 
            history.pushState(null, null, o.location.origin + o.location.pathname + o.location.search + e.selector)) : o.location.hash = e.selector), 
            s === e && !a._isCollapisble() || (a._closeTab(t, s), s === e && a._isCollapisble() || a._openTab(t, e, !1, !0)));
        }
        for (var a = this, s = 0; s < this.tabs.length; s++) this.tabs[s].anchor.on(a.options.event, {
            tab: a.tabs[s]
        }, t), this.tabs[s].accordionAnchor.on(a.options.event, {
            tab: a.tabs[s]
        }, t);
    }, a.prototype._getStartTab = function() {
        var t = this._getTabRefBySelector(o.location.hash), t = 0 <= t && !this._getTab(t).disabled ? this._getTab(t) : 0 < this.options.active && !this._getTab(this.options.active).disabled ? this._getTab(this.options.active) : this._getTab(0);
        return t;
    }, a.prototype._setState = function(t) {
        var s = r("ul:first", this.$element), e = this.state, a = "string" == typeof this.options.startCollapsed;
        s.is(":visible") ? this.state = "tabs" : this.state = "accordion", this.state !== e && (this.$element.trigger("tabs-activate-state", {
            oldState: e,
            newState: this.state
        }), e && a && this.options.startCollapsed !== this.state && this._getCurrentTab() === i && (s = this._getStartTab(t), 
        this._openTab(t, s)));
    }, a.prototype._openTab = function(s, e, t, a) {
        var o, i = this;
        t && this._closeTab(s, this._getCurrentTab()), a && 0 < this.rotateInterval && this.stopRotation(), 
        e.active = !0, e.tab.removeClass(i.options.classes.stateDefault).addClass(i.options.classes.stateActive), 
        e.accordionTab.removeClass(i.options.classes.stateDefault).addClass(i.options.classes.stateActive), 
        i._doTransition(e.panel, i.options.animation, "open", function() {
            var t = "tabs-load" !== s.type || i.options.scrollToAccordionOnLoad;
            e.panel.removeClass(i.options.classes.stateDefault).addClass(i.options.classes.stateActive), 
            "accordion" !== i.getState() || !i.options.scrollToAccordion || i._isInView(e.accordionTab) && "default" === i.options.animation || !t || (o = e.accordionTab.offset().top - i.options.scrollToAccordionOffset, 
            "default" !== i.options.animation && 0 < i.options.duration ? r("html, body").animate({
                scrollTop: o
            }, i.options.duration) : r("html, body").scrollTop(o));
        }), this.$element.trigger("tabs-activate", e);
    }, a.prototype._closeTab = function(t, s) {
        var e = this, a = "string" == typeof e.options.animationQueue;
        s !== i && (a = a && e.getState() === e.options.animationQueue || !a && e.options.animationQueue, 
        s.active = !1, s.tab.removeClass(e.options.classes.stateActive).addClass(e.options.classes.stateDefault), 
        e._doTransition(s.panel, e.options.animation, "close", function() {
            s.accordionTab.removeClass(e.options.classes.stateActive).addClass(e.options.classes.stateDefault), 
            s.panel.removeClass(e.options.classes.stateActive).addClass(e.options.classes.stateDefault);
        }, !a), this.$element.trigger("tabs-deactivate", s));
    }, a.prototype._doTransition = function(s, e, a, o, t) {
        var i, n = this;
        switch (e) {
          case "slide":
            i = "open" === a ? "slideDown" : "slideUp";
            break;

          case "fade":
            i = "open" === a ? "fadeIn" : "fadeOut";
            break;

          default:
            i = "open" === a ? "show" : "hide", n.options.duration = 0;
        }
        this.$queue.queue("responsive-tabs", function(t) {
            s[i]({
                duration: n.options.duration,
                complete: function() {
                    o.call(s, e, a), t();
                }
            });
        }), "open" !== a && !t || this.$queue.dequeue("responsive-tabs");
    }, a.prototype._isCollapisble = function() {
        return "boolean" == typeof this.options.collapsible && this.options.collapsible || "string" == typeof this.options.collapsible && this.options.collapsible === this.getState();
    }, a.prototype._getTab = function(t) {
        return this.tabs[t];
    }, a.prototype._getTabRefBySelector = function(t) {
        for (var s = 0; s < this.tabs.length; s++) if (this.tabs[s].selector === t) return s;
        return -1;
    }, a.prototype._getCurrentTab = function() {
        return this._getTab(this._getCurrentTabRef());
    }, a.prototype._getNextTabRef = function(t) {
        t = t || this._getCurrentTabRef(), t = t === this.tabs.length - 1 ? 0 : t + 1;
        return this._getTab(t).disabled ? this._getNextTabRef(t) : t;
    }, a.prototype._getPreviousTabRef = function() {
        return 0 === this._getCurrentTabRef() ? this.tabs.length - 1 : this._getCurrentTabRef() - 1;
    }, a.prototype._getCurrentTabRef = function() {
        for (var t = 0; t < this.tabs.length; t++) if (this.tabs[t].active) return t;
        return -1;
    }, a.prototype._equaliseHeights = function() {
        var s = 0;
        r.each(r.map(this.tabs, function(t) {
            return s = Math.max(s, t.panel.css("minHeight", "").height()), t.panel;
        }), function() {
            this.css("minHeight", s);
        });
    }, a.prototype._isInView = function(t) {
        var s = r(o).scrollTop(), e = s + r(o).height(), a = t.offset().top;
        return a + t.height() <= e && s <= a;
    }, a.prototype.getversion = function() {
        return this.options.version;
    }, a.prototype.activate = function(t, s) {
        var e = jQuery.Event("tabs-activate"), t = (this.isNumber(t) || (t = this._getTabRefBySelector(t)), 
        this._getTab(t));
        t.disabled || this._openTab(e, t, !0, s || !0);
    }, a.prototype.isNumber = function(t) {
        return !isNaN(parseFloat(t)) && !isNaN(+t);
    }, a.prototype.deactivate = function(t) {
        var s = jQuery.Event("tabs-dectivate"), t = this._getTab(t);
        t.disabled || this._closeTab(s, t);
    }, a.prototype.enable = function(t) {
        t = this._getTab(t);
        t && (t.disabled = !1, t.tab.addClass(this.options.classes.stateDefault).removeClass(this.options.classes.stateDisabled), 
        t.accordionTab.addClass(this.options.classes.stateDefault).removeClass(this.options.classes.stateDisabled));
    }, a.prototype.disable = function(t) {
        t = this._getTab(t);
        t && (t.disabled = !0, t.tab.removeClass(this.options.classes.stateDefault).addClass(this.options.classes.stateDisabled), 
        t.accordionTab.removeClass(this.options.classes.stateDefault).addClass(this.options.classes.stateDisabled));
    }, a.prototype.getState = function() {
        return this.state;
    }, a.prototype.startRotation = function(t) {
        var s = this;
        if (!(this.tabs.length > this.options.disabled.length)) throw new Error("Rotation is not possible if all tabs are disabled");
        this.rotateInterval = setInterval(function() {
            var t = jQuery.Event("rotate");
            s._openTab(t, s._getTab(s._getNextTabRef()), !0);
        }, t || (r.isNumeric(s.options.rotate) ? s.options.rotate : 4e3));
    }, a.prototype.stopRotation = function() {
        o.clearInterval(this.rotateInterval), this.rotateInterval = 0;
    }, a.prototype.option = function(t, s) {
        return s && (this.options[t] = s), this.options[t];
    }, r.fn.responsiveTabs = function(t) {
        var s, e = arguments;
        return t === i || "object" == typeof t ? this.each(function() {
            r.data(this, "responsivetabs") || r.data(this, "responsivetabs", new a(this, t));
        }) : "string" == typeof t && "_" !== t[0] && "init" !== t ? (s = r.data(this[0], "responsivetabs"), 
        "destroy" === t && r.data(this, "responsivetabs", null), s instanceof a && "function" == typeof s[t] ? s[t].apply(s, Array.prototype.slice.call(e, 1)) : this) : void 0;
    };
}(jQuery, window);